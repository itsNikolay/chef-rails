global
        log 127.0.0.1   local0
        log 127.0.0.1   local1 notice
        #log loghost    local0 info
        maxconn 4096
        #debug
        #quiet
        user haproxy
        group haproxy

defaults
        log     global
        mode    http
        option  httplog
        option  httpclose
        option  forwardfor
        option  dontlognull
        retries 3
        option redispatch
        maxconn 2000
        contimeout      5000
        clitimeout      50000
        srvtimeout      50000

<% if @app_balancers %>
frontend http-in
  bind 0.0.0.0:<%= node["haproxy"]["incoming_port"] %>
  <% @app_balancers.each do |app, config| %>
  acl is_<%= app %> hdr_end(host) -i <%= config['domains'].join(' ') %>
  <% end %>

  <% @app_balancers.each do |app, config| %>
  use_backend <%= app %> if is_<%= app %>
  <% end %>

<% @app_balancers.each do |app, config| %>
backend <%= app %>
  balance <%= node["haproxy"]["balance_algorithm"] %>
  option httpclose
  option forwardfor
  <% config['members'].each do |name, address| %>
  server <%= name %> <%= address %>:8080 weight 1 maxconn <%= node["haproxy"]["member_max_connections"] %> check
  <% end %>

<% end %>

<% else %>

# Set up application listeners here.
listen www 0.0.0.0:<%= node["haproxy"]["incoming_port"] %>
  <% if @balance_members %>
  balance  <%= node["haproxy"]["balance_algorithm"] %>
  <% @balance_members.each do |member| %>
  server <%= member['server_name'] %> <%= member['server_ip'] %>:8080 weight 1 maxconn <%= node["haproxy"]["member_max_connections"] %> check
  <% end %>
  <% else %>
  dispatch 127.0.0.1:8080
  <% end %>

<% end %>

<% if node["haproxy"]["enable_admin"] -%>
listen admin 0.0.0.0:22002
  mode http
  stats uri /
<% end -%>
